item_master.controller('itemListCtrl', function ($scope, $http,  $location, $filter, $modal) {
    var warehouse = $location.search().warehouse;
    var client    = $location.search().client;
    var last_status = 'Active';

    var url = '/item_master_maintenance.json?';


    $scope.reload = function() {
        $http.get(url).success(function(data) {
            $scope.items = data;

            $scope.sortingOrder = sortingOrder;
            $scope.reverse = false;
            $scope.filteredItems = [];
            $scope.groupedItems = [];
            $scope.itemsPerPage = 8;
            $scope.pagedItems = [];
            $scope.currentPage = 0;

            var searchMatch = function (haystack, needle) {
                if (!needle) {
                    return true;
                }
                return haystack.toLowerCase().indexOf(needle.toLowerCase()) !== -1;
            };


            // Filter by status
            $scope.status = function (status) {
                status = status==null ?  last_status : status;
                last_status = status;
                $scope.filteredItems = $filter('filter')($scope.items, function (item) {
                    if (searchMatch(item["status"], status))
                        return true;
                    else
                        return false;

                });
                // take care of the sorting order
                if ($scope.sortingOrder !== '') {
                    $scope.filteredItems = $filter('orderBy')($scope.filteredItems, $scope.sortingOrder, $scope.reverse);
                }
                $scope.currentPage = 0;
                // now group by pages
                $scope.groupToPages();
            };

            // init the filtered items
            $scope.search = function () {
                $scope.filteredItems = $filter('filter')($scope.items, function (item) {
                    //for(var attr in item) {
                    if (searchMatch(item["status"], $scope.query))
                        return true;
                    else
                    //}
                        return false;
                });
                // take care of the sorting order
                if ($scope.sortingOrder !== '') {
                    $scope.filteredItems = $filter('orderBy')($scope.filteredItems, $scope.sortingOrder, $scope.reverse);
                }
                $scope.currentPage = 0;
                // now group by pages
                $scope.groupToPages();
            };


            // calculate page in place
            $scope.groupToPages = function () {
                $scope.pagedItems = [];

                for (var i = 0; i < $scope.filteredItems.length; i++) {
                    if (i % $scope.itemsPerPage === 0) {
                        $scope.pagedItems[Math.floor(i / $scope.itemsPerPage)] = [ $scope.filteredItems[i] ];
                    } else {
                        $scope.pagedItems[Math.floor(i / $scope.itemsPerPage)].push($scope.filteredItems[i]);
                    }
                }
            };

            $scope.range = function (start, end) {
                var ret = [];
                if (!end) {
                    end = start;
                    start = 0;
                }
                for (var i = start; i < end; i++) {
                    ret.push(i);
                }
                return ret;
            };

            $scope.prevPage = function () {
                if ($scope.currentPage > 0) {
                    $scope.currentPage--;
                }
            };

            $scope.nextPage = function () {
                if ($scope.currentPage < $scope.pagedItems.length - 1) {
                    $scope.currentPage++;
                }
            };

            $scope.setPage = function () {
                $scope.currentPage = this.n;
            };

            // functions have been describe process the data for display
            $scope.search();

            // change sorting order
            $scope.sort_by = function(newSortingOrder) {
                if ($scope.sortingOrder == newSortingOrder)
                    $scope.reverse = !$scope.reverse;

                $scope.sortingOrder = newSortingOrder;

                // icon setup
                $('th i').each(function(){
                    // icon reset
                    $(this).removeClass().addClass('icon-sort');
                });
                if ($scope.reverse)
                    $('th.'+new_sorting_order+' i').removeClass().addClass('icon-chevron-up');
                else
                    $('th.'+new_sorting_order+' i').removeClass().addClass('icon-chevron-down');
            };
            $scope.status();
        });

    };

    //Modal methods
    $scope.item_add_modal = function (size) {
        var modalInstance = $modal.open({
            templateUrl: '<%= asset_path('item_master_maintenance/add_item.html') %>',
            controller: 'itemAddCtrl',
            size: size,
            resolve: {
                item: function () {
                    return null;
                }
            }
        });
        $scope.reload();
    };

    $scope.item_edit_modal = function (size, item) {
        var modalInstance = $modal.open({
            templateUrl: '<%= asset_path('shipment_maintenance/show_header.html') %>',
            controller: 'itemEditCtrl',
            size: size,
            resolve: {
                item: function () {
                    return item;
                }
            }
        });
        $scope.reload();
    };

    $scope.reload();
});
