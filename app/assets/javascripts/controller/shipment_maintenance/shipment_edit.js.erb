shipment.controller('shipmentEditCtrl', function ($scope, $modalInstance, shipment, shipment_detail_id, $http, $location, $q, UserService) {
  var warehouse = $location.search().warehouse;
  var client    = $location.search().client; 
  var detail_id    = $location.search().detail_id; 
  var url = '/shipment_maintenance/'+  shipment + '.json?client=' + client + '&warehouse='+ warehouse;
    $scope.YesorNo = [
    {value: 'Y', text: 'Yes'},
    {value: 'N', text: 'No'},
  ]; 

    console.log(shipment);
    UserService.get_data($scope, url)

    angular.forEach($scope.shipment_details, function(shipment_detail) {
        if (shipment_detail.id == shipment_detail_id){
            $scope.shipment_detail = shipment_detail;

        }
    });
  
  $scope.header_template = {
        name: 'header_template',
        url: '<%= asset_path('shipment_maintenance/shipment_header.html') %>'
        }; 

  $scope.detail_template = {
        name: 'detail_template',
        url: '<%= asset_path('shipment_maintenance/shipment_detail.html') %>'
        }; 



  $scope.statuses = [
    {value: 'Created', text: 'Created'},
    {value: 'Initiated', text: 'Initiated'},
    {value: 'In Fullfilment', text: 'In Fullfilment'},
    {value: 'Verified', text: 'Verified'},
    {value: 'Cancelled', text: 'Cancelled'}
  ];


    $scope.updateHeader = function(data, el, id) {

        var warehouse = $location.search().warehouse;
        var shipment  =  $location.search().shipment;
        var client    = $location.search().client;
        var fields_to_update = {};
        var url = '/shipment_maintenance/'+ id + '/update_header?client=' + client + '&warehouse='+ warehouse;
        fields_to_update[el.$editable.elem[0].id] = data;
        var d = $q.defer();
        $http.post(url, {
            'authenticity_token': $('meta[name="csrf-token"]').attr('content'),
            app_parameters: {'client': 'WM', 'warehouse': 'WH1','channel': '', 'building': ''},
            fields_to_update: fields_to_update
        })
                .success(function(res) {
                    res = res || {};
                    d.resolve();
                }).error(function(res){
                    console.log(res);
                    res = res || {};
                    if (res.status == 500) {
                        d.reject(res.message|| 'Server Error');
                    }
                    else {
                        d.reject(res.errors[0].message);
                    }
                });
        return d.promise;
    };

    $scope.updateDetail = function(data, el, id) {

        var warehouse = $location.search().warehouse;
        var shipment  =  $location.search().shipment;
        var client    = $location.search().client;
        var fields_to_update = {};
        var url = '/shipment_maintenance/'+ id + '/update_detail?client=' + client + '&warehouse='+ warehouse;
        fields_to_update[el.$editable.elem[0].id] = data;
        var d = $q.defer();
        $http.post(url, {
            'authenticity_token': $('meta[name="csrf-token"]').attr('content'),
            app_parameters: {'client': 'WM', 'warehouse': 'WH1','channel': '', 'building': ''},
            fields_to_update: fields_to_update
        })
                .success(function(res) {
                    res = res || {};
                    d.resolve();
                }).error(function(res){
                    res = res || {};
                    if (res.status == 500) {
                        d.reject('Server error!');
                    }
                    else {
                        d.reject(res.errors[0].message);
                    }
                });
        return d.promise;
    };

    $scope.ok = function () {
        $modalInstance.close();
    };

    $scope.cancel = function () {
        $modalInstance.dismiss('cancel');
    };

});
